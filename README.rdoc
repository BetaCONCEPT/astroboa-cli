= astroboa-cli

The astroboa-cli gem provides a command line interface to astroboa platform and astroboa apps management.  

It has easy to use commands for installing astroboa platform, creating new repositories, taking backups and deploying your ruby apps directly to astroboa.

== Install as a gem in your ruby environment

Run at the command prompt:

> gem install astroboa-cli
 
To see the available commands:

	$ astroboa-cli help

To get help for a particular command:

	$ astroboa-cli help <command>

e.g. astroboa-cli help server

To get help for a particular subcommand:

	$ astroboa-cli help <command:subcommand>

e.g. astroboa-cli help server:install

*NOTE on running astroboa-cli with sudo:*
If you use astroboa-cli in LINUX then server installation/running and repository installation/removal always require sudo privileges because astroboa is installed and runs as user 'astroboa'.
In MAC OS X no special user is created and thus sudo privileges are only required if you want to install astroboa to a directory that you do not own.
astroboa-cli checks the required privileges for each command and will produce an error message if not met. 
If your ruby is installed with *rbenv* then *you need to also install the 'rbenv-sudo' plugin* to overcome the problem of using rbenv installed rubies with sudo.
With 'rbenv-sudo' installed you can install astroboa with the following command:

$ rbenv sudo astroboa-cli server:install

Check the instructions that follow to learn how to install rbenv-sudo
-----

= How to install ruby

astroboa-cli requires ruby version 1.9.x.
If you do not have ruby already installed or you machine comes with an older version, here is some quick info on two easy ways to install and maintain your ruby environment.

You can easily install ruby with 'rbenv' or 'rvm' utility programs.

== Install Ruby with RBENV

We recommend to install ruby using the 'rbenv' and 'ruby-build' utility commands.

---
On *Mac OS X*  to install 'rbenv' and 'ruby-build' using the Homebrew (http://mxcl.github.com/homebrew/) package manager do:
$ brew update
$ brew install rbenv
$ brew install ruby-build

Add the following line in your .bash_profile:
$ echo 'if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi' >> ~/.bash_profile
---

---
On *Ubuntu Linux* to install 'rbenv' and 'ruby-build' using apt package manager and git do (it has been tested in Ubuntu 12.04):
$ sudo apt-get install zlib1g-dev openssl libopenssl-ruby1.9.1 libssl-dev libruby1.9.1 libreadline-dev git-core
$ cd
$ git clone git://github.com/sstephenson/rbenv.git .rbenv

To make available rbenv commands to your shell add the following path to your .bashrc:
$ echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc

Add the following line in your .bashrc:
$ echo 'if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi' >> ~/.bashrc

Then install ruby-build:
$ mkdir -p ~/.rbenv/plugins
$ cd ~/.rbenv/plugins
$ git clone git://github.com/sstephenson/ruby-build.git
---

*The folllowing instructions are the same for both MAC and Linux:*

If you want to use *sudo* to run astroboa-cli (and any other ruby-based program) you should also install *rbenv-sudo*.
rbenv does not work with sudo due to sudo's 'secure_path'. 
rbenv-sudo is a plugin for rbenv that allows you to run rbenv-provided Rubies and Gems from within a sudo session.

$ git clone git://github.com/dcarley/rbenv-sudo.git ~/.rbenv/plugins/rbenv-sudo

After you have installed rbenv, ruby-build and optionally rbenv-sudo as described above do the following:

Restart your shell to apply the changes in your bashrc or bash_profile 
$ exec $SHELL

To install ruby version 1.9.3-p194 do:
$ rbenv install 1.9.3-p194
$ rbenv rehash

NOTE: You should run 'rbenv rehash' any time you install a new Ruby binary (for example, when installing a new Ruby version, or when installing a gem that provides a binary)

To set the global version of Ruby to be used in all your shells do:
$ rbenv global 1.9.3-p194

To set ruby 1.9.3-p194 as a local per-project ruby version by writing the version name to an .rbenv-version file in the current project directory do:

$ rbenv local 1.9.3-p194

To set ruby 1.9.3-p194 as the version to be used only in the current shell (sets the RBENV_VERSION environment variable in your shell) do:

$ rbenv shell 1.9.3-p194

Test your ruby installation:
$ rbenv global 1.9.3-p194
$ ruby -v
ruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-darwin12.0.0]

For more information about RBENV and RUBY-BUILd check https://github.com/sstephenson/rbenv, https://github.com/sstephenson/ruby-build and https://github.com/dcarley/rbenv-sudo



== Install Ruby with RVM

If you prefer to use 'rvm' as your ruby management utility use the following command to install it for a single user:

user$ curl -L get.rvm.io | bash -s stable 

For multi-user installation and detailed rvm installation instructions check: https://rvm.io/rvm/install/    

After 'rvm' has been installed run the following commands to install ruby 1.9.3-p194:
rvm install 1.9.3-p194
rvm use 1.9.3-p194

= LICENSE
-------
Released under the LGPL license; see the files LICENSE, COPYING and COPYING.LESSER. 

   

